{"version":3,"sources":["components/Header.js","components/Card.js","components/ClearColumn.js","components/Column.js","components/Main.js","components/Footer.js","components/CardModal.js","components/services/LoadUsersService.js","App.js","index.js"],"names":["Header","className","Card","props","data","desc","cardDesc","title","cardTitle","date","id","user","useContext","CardsContext","cards","setCards","setModalState","onClick","ev","trgClass","target","includes","filter","item","handleDeleteCard","map","column","handleMoveCard","ClearColumn","useState","isOpen","setIsOpen","posLeft","setPosLeft","posTop","setPosTop","moveLeft","setMoveLeft","col","styles","pos","left","top","Fragment","onMouseOver","clientX","clientY","document","querySelector","clientWidth","style","Column","name","shortName","toLowerCase","replace","containerName","idName","cardsCounter","el","length","useEffect","localStorage","setItem","JSON","stringify","visibility","uuid","Main","Footer","href","CardModal","users","modalState","find","card","setCardTitle","setCardDesc","setUser","onSubmit","event","preventDefault","newCard","Date","toLocaleString","slice","prev","concat","editCard","prevState","cardToReplace","splice","indexOf","type","placeholder","maxLength","value","onChange","required","rows","cols","a","getCachedUsers","fetch","response","json","result","cachedData","getItem","Error","parse","getUsers","React","createContext","App","setUsers","useCallback","LoadUsersService","usersList","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.091b9515.chunk.js","sourcesContent":["export default function Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"header__title\">Kanban Board</h1>\r\n            <p className=\"header__subtitle\">A board to keep track of your task</p>\r\n        </header>\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { CardsContext } from '../App';\r\n\r\nexport default function Card(props) {\r\n    const { cardDesc:desc, cardTitle:title, date, id, user } = props.data;\r\n\r\n    const { cards, setCards, setModalState } = useContext(CardsContext);\r\n\r\n    const handleDeleteCard = (id) => setCards(cards.filter(item => item.id!==id));\r\n\r\n    function handleMoveCard(id) {\r\n        setCards( cards.map( item => {\r\n            item.id === id && (item.column<2 ? item.column++ : item.column=0) ;\r\n            return item;\r\n            }\r\n        ) )\r\n    }\r\n\r\n    function handleCardClick(trgClass) {\r\n        (!trgClass.includes('delete') && !trgClass.includes('move')) && setModalState([`edit`,id]);\r\n    }\r\n\r\n    return (\r\n        <li className='card' id={id} onClick={ev=>handleCardClick(ev.target.className)}>\r\n            <div className='card--user-field'>\r\n                <span className='card--user'>{user}</span>\r\n            </div>\r\n            <span className='card--title'>{title}</span>\r\n            <div className='card--desc'>{desc}</div>\r\n            <div className='card--bottom'>\r\n                <span className='card--date'>{date}</span>\r\n                <button className='card--delete-btn' onClick={() => handleDeleteCard(id)} />\r\n                <button className='card--move-btn' onClick={() => handleMoveCard(id)} />\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React, {useState, useContext} from 'react';\r\n\r\nimport {CardsContext} from '../App';\r\n\r\nexport default function ClearColumn({column}) {\r\n    const   [ isOpen, setIsOpen ] = useState(false),\r\n            [ posLeft, setPosLeft ] = useState(1),\r\n            [ posTop, setPosTop ] = useState(1),\r\n            [ moveLeft, setMoveLeft ] = useState(0);\r\n\r\n    const { cards, setCards } = useContext(CardsContext);\r\n\r\n    const handleClearColumn = (col) => col===1 ? setIsOpen(true) : ClearColumn(col);\r\n\r\n    const ClearColumn = (col) => setCards(cards.filter(item => item.column!==col));\r\n\r\n    let styles = { pos: { left: posLeft-moveLeft, top: posTop } };\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <div className=\"board--delBtn\"\r\n            onClick={ () => handleClearColumn(column) }\r\n            onMouseOver={ ev => {\r\n                setPosLeft(ev.clientX);\r\n                setPosTop(ev.clientY);\r\n                setMoveLeft(document.querySelector('.board--delBtn-tooltip').clientWidth);\r\n            } } />\r\n        <span className=\"board--delBtn-tooltip\" style={styles.pos}> Delete all cards </span>\r\n\r\n        {isOpen &&\r\n        <div className=\"modal-window--confirm\">\r\n            <div className=\"modal-window--container\">\r\n                <div className=\"confirm-text\">Delete all 'In Progress' Cards?</div>\r\n                <div className='card--edit-field center'>\r\n                    <button id='deleteInProgressCards' onClick={()=>ClearColumn(column)}>Yes</button>\r\n                    <button id='notDeleteInProgressCards' onClick={()=>setIsOpen(false)}>No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        }\r\n        </React.Fragment>\r\n    )\r\n}","import { useContext, useEffect } from \"react\";\r\nimport uuid from 'react-uuid';\r\n\r\nimport Card from './Card';\r\nimport ClearColumn from './ClearColumn';\r\nimport {CardsContext} from '../App';\r\n\r\nexport default function Column({name}) {\r\n    let shortName = name.toLowerCase().replace(' ','-'),\r\n        containerName = 'board__'+shortName+'--container',\r\n        idName = shortName+'-title';\r\n        \r\n    let column = 0;\r\n    if (name==='In Progress') column=1\r\n    else if (name==='Done') column=2;\r\n\r\n    const { cards, setModalState } = useContext(CardsContext);\r\n\r\n    let cardsCounter = cards.filter(el=>el.column===column).length;\r\n\r\n    let styles = { hide: { visibility: 'hidden' } };\r\n    \r\n    useEffect(()=> localStorage.setItem('cards', JSON.stringify(cards)), [cards]);\r\n\r\n    return (\r\n        <div className={containerName}>\r\n            <div className=\"board__title-bar\">\r\n                <div className=\"board__title\" id={idName}>{name}\r\n                        <div className=\"board--card_counter\" style={cardsCounter===0 ? styles.hide : null}>\r\n                        {cardsCounter}\r\n                        </div>\r\n                </div>\r\n                {cardsCounter>0 && <ClearColumn column={column}/>}\r\n            </div>\r\n            <ul className=\"board__cards\">\r\n                {cardsCounter>0 && \r\n                    cards.filter(el=>el.column===column).map(item=> <Card key={uuid()} data={item}/> ) \r\n                }\r\n            </ul>\r\n            {name === 'To do' && \r\n                <button className=\"board__add-card-btn\" onClick={()=>setModalState(['add'])}> Add new </button>\r\n            }\r\n        </div> \r\n    )\r\n}","import Column from './Column';\r\n\r\nexport default function Main() {\r\n    return (\r\n        <main className=\"board\">\r\n            \r\n            <span className=\"board--delBtn-tooltip\">Delete all cards</span>\r\n\r\n            <Column name='To do'/>\r\n            <Column name='In Progress'/>\r\n            <Column name='Done'/>\r\n\r\n        </main>\r\n    )\r\n}","export default function Footer() {\r\n    return (\r\n    <footer className=\"footer\">\r\n            <a className=\"footer__link\" href=\"https://github.com/g5-freemen\">\r\n                Made by Anton Borkovskij, 2021\r\n            </a>\r\n    </footer>\r\n    )\r\n}","import React, {useState, useContext} from 'react';\r\nimport uuid from 'react-uuid';\r\n\r\nimport {CardsContext} from '../App';\r\n\r\nexport default function CardModal() {\r\n    const { users, cards, setCards, modalState, setModalState } = useContext(CardsContext);\r\n\r\n    const   [ card ] = useState((modalState[1] && cards.find(item=>item.id===modalState[1])) || {} ),\r\n            [ cardTitle, setCardTitle ] = useState((modalState[1] && card.cardTitle) || ''),\r\n            [ cardDesc, setCardDesc ] = useState((modalState[1] && card.cardDesc) ||  ''),\r\n            [ user, setUser ] = useState((modalState[1] && card.user) || '');\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n        if (modalState[0]==='add') {\r\n            const getDate = () => new Date().toLocaleString().slice(0,-3);\r\n            let newCard = { cardTitle, cardDesc, user, date:getDate(), id:uuid(), column:0 };\r\n            setCards(prev=>prev.concat(newCard));\r\n        } else {\r\n            let editCard = { cardTitle, cardDesc, user, date:card.date, id:card.id, column:card.column };\r\n            const prevState = [...cards];\r\n            const cardToReplace = prevState.find(item => item.id === modalState[1]);\r\n            prevState.splice(prevState.indexOf(cardToReplace), 1, editCard);\r\n            setCards(prevState);\r\n        }\r\n        setCardTitle('');\r\n        setCardDesc('');\r\n        setUser('');\r\n        setModalState(null);\r\n    }\r\n\r\n    function handleCloseModal(ev) {\r\n        ev.preventDefault();\r\n        setModalState(null);\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal-window\">\r\n            <form className=\"card-form\" onSubmit={submitHandler}>\r\n            {modalState[1] && <span className='card--edit'>Edit Card</span>}\r\n            <span className=\"card-form--top-field\">\r\n                    <label>Title *\r\n                    <input  className=\"card-form--title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Card Title\"\r\n                            maxLength=\"27\"\r\n                            value={cardTitle}\r\n                            onChange={ev=>setCardTitle(ev.target.value)}\r\n                            required />     \r\n                    </label>\r\n                    <button className=\"card-form--close-btn\" onClick={handleCloseModal} />\r\n                </span>\r\n                <label>Description *\r\n                <textarea   className=\"card-form--desc\"\r\n                            rows=\"8\"\r\n                            cols=\"40\"\r\n                            placeholder=\"Enter Card Description\"\r\n                            value={cardDesc}\r\n                            onChange={ev=>setCardDesc(ev.target.value)}\r\n                            required />\r\n                </label>\r\n                <label>User *\r\n                <select name=\"userName\" id=\"usersList\" value={user} onChange={ev=>setUser(ev.target.value)} required>\r\n                    <option key={uuid()} value=\"\">Select user</option>\r\n                    {users && users.map(item => <option key={uuid()} value={item}>{item}</option> )}                    \r\n                </select>\r\n                </label>\r\n                <input className=\"card-form--save-btn\" type=\"submit\" value=\"Save\"/>\r\n            </form>    \r\n        </div>\r\n    )\r\n}","async function getUsers() {\r\n    try {\r\n        return getCachedUsers();\r\n    } catch (e) {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n        const data = await response.json();\r\n        const result = data.map(el => el.name);\r\n        localStorage.setItem('users', JSON.stringify(result));\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nfunction getCachedUsers() {\r\n    const cachedData = localStorage.getItem('users');\r\n    \r\n    if (!cachedData) throw new Error('No cached users');\r\n\r\n    return JSON.parse(cachedData)\r\n}\r\n\r\nexport default { getUsers }","import './style/scss/main.scss';\n\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport CardModal from \"./components/CardModal\";\nimport LoadUsersService from './components/services/LoadUsersService';\nimport React, { useState, useEffect, useCallback } from 'react';\n\nexport const CardsContext = React.createContext();\n\nexport default function App() {\n  const [ cards, setCards ] = useState(JSON.parse(localStorage.getItem('cards')) || []);\n  const [ users, setUsers ] = useState(null);\n  const [ modalState, setModalState ] = useState(null);\n\n  const getUsers = useCallback(async () => {\n    const usersList = await LoadUsersService.getUsers();\n    setUsers(usersList);\n  }, []);\n\n  useEffect( () => getUsers(), [] );\n\n  return (\n    <CardsContext.Provider value={{users, cards, setCards, modalState, setModalState}}>\n      <div className=\"App\">\n        <Header/>\n        <Main/>\n        <Footer/>\n        {modalState && <CardModal/> }\n      </div>\n    </CardsContext.Provider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}